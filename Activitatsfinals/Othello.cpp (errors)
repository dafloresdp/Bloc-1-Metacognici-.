#include <iostream>
#include <string>
#include <vector>
using namespace std;

// Definim una constant per a la mida màxima del tauler
const int MAX_SIZE = 8;

// Definim d'una estructura per representar una posició al tauler
struct Position {
    int fila;
    int columna;
    Position(int f, int c) : fila(f), columna(c) {}
};

// Inicialitzem el tauler amb les fitxes inicials
void initializeBoard(vector<vector<char>>& tauler, int mida) {
    tauler.resize(mida, vector<char>(mida, '.'));
    int mig = mida / 2;
    tauler[mig - 1][mig - 1] = tauler[mig][mig] = 'W';
    tauler[mig - 1][mig] = tauler[mig][mig - 1] = 'B';
}

// Imprimim el tauler actual
void printBoard(const vector<vector<char>>& tauler, int mida) {
    for (int i = 0; i < mida; ++i) {
        for (int j = 0; j < mida; ++j) {
            cout << tauler[i][j];
        }
        cout << endl;
    }
}

// Relitzem una jugada al tauler
void makeMove(vector<vector<char>>& tauler, int mida, char jugador, int fila, int columna) {
    tauler[fila - 1][columna - 1] = jugador;
    // Lògica per girar les fitxes de l'oponent segons les regles del joc d'othello
}

int main() {
    // Initzialitzem del tauler
    vector<vector<char>> tauler;
    int mida;

    // Entrada de la mida del tauler
    cout << "Introdueix la mida del tauler (ha de ser parell i menor o igual que 8): ";
    cin >> mida;

    // Validem la mida del tauler
    if (mida % 2 != 0 || mida > MAX_SIZE) {
        cout << "Mida del tauler invàlida." << endl;
        return 1;
    }

    // Inicialització del tauler
    initializeBoard(tauler, mida);

    // Bucle principal del joc
   

    return 0;
}
